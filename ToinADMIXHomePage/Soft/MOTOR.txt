//MOTOR

//現在のモーター出力
int M0;
int M1;
int M2;
int M3;

int MOTOR(int I, int J, int K, int L){//出力目標値
  if(I == M0){
    M0 = I;
  }
  if(J == M1){
    M1 = J;   
  }
  if(K == M2){
    M2 = K;
  }
  if(L == M3){
    M3 = L;
  }else{
    M0 = I/2;
    M1 = J/2;
    M2 = K/2;
    M3 = L/2;
  }
  while (TRUE){
    gPwm[0] = M0 < 0 ? (M0 * -1) : M0 | 0x80;
    gPwm[1] = M1 < 0 ? (M1 * -1) : M1 | 0x80;
    gPwm[2] = M2 < 0 ? (M2 * -1) | 0x80 : M2;
    gPwm[3] = M3 < 0 ? (M3 * -1) | 0x80 : M3;
    pwm_out();
    wait_ms(1);
    if(I >= 0)
      M0 = M0 < I ? (M0 + 1) : I;
    else
      M0 = M0 > I ? (M0 - 1) : I;
    if(J >= 0)
      M1 = M1 < J ? (M1 + 1) : J;
    else
      M1 = M1 > J ? (M1 - 1) : J;
    if(K >= 0)
      M2 = M2 < K ? (M2 + 1) : K;
    else
      M2 = M2 > K ? (M2 - 1) : K;
    if(L >= 0)
      M3 = M3 < L ? (M3 + 1) : L;
    else
      M3 = M3 > L ? (M3 - 1) : L;
    if(I >= 0){
      if(M0 >= I && M1 >= J && M2 >= K && M3 >= L)
        break;
    }else if(I < 0){
      if(I >= M0 && J >= M1 && K >= M2 && L >= M3)
        break;
    }
  }
}

void user_main(void){
    I = 70;
    J = 70;
    K = 70;
    L = 70;
    MOTOR(I, J, K, L);
}